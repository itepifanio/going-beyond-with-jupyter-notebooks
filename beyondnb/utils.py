# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/06_hand.ipynb.

# %% auto 0
__all__ = ['Hand']

# %% ../nbs/06_hand.ipynb 2
from typing import Optional, List, Iterator

from fastcore.basics import patch
from indo_alem_com_jupyter_notebook.core import Card

# %% ../nbs/06_hand.ipynb 3
class Hand:
    def __init__(self, max_cards: Optional[int] = None):
        self._max_cards = max_cards
        self.cards: List[Card] = []

    def __getitem__(self, value: int):
        return self.cards[value]

    def __len__(self):
        return len(self.cards)

    def __add__(self, card: Card):
        self.cards.append(card)
        return self

    def __iter__(self) -> Iterator[Card]:
        return iter(self.cards)

    def __repr__(self):
        return "\n".join(str(card) for card in self.cards)

# %% ../nbs/06_hand.ipynb 4
@patch
def discard(self: Hand, index: int = 0) -> Optional[Card]:
    if index < len(self.cards):
        card = self.cards.pop(index)
        return card

    return None

# %% ../nbs/06_hand.ipynb 5
@patch
def value(self: Hand) -> int:
    return sum([card.rank for card in self])
